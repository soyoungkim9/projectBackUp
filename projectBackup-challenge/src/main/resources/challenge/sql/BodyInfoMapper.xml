<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 이름은 SQL을 찾을 때 사용하는 그룹명이다.
     따라서 SQL 문을 사용하는 DAO 클래스 이름과 같게 하면
     유지보수할 때 알아보기 쉽다.
     단순히 알아보기 쉬울 뿐만 아니라 
     스프링 프레임워크와 연동할 때 DAO 객체를 자동 생성할 수 있다. 
-->
<mapper namespace="challenge.dao.BodyInfoDao">
  <resultMap type="BodyInfo" id="BodyInfoMap">
    <id column="bno" property="bno"/>
    <result column="bDate" property="bdate"/>
    <result column="weight" property="weight"/>
    <result column="muscle" property="muscle"/>
    <result column="fat" property="fat"/>
    
    
  </resultMap>
  
  
  <!-- SQL 문 id를 설정할 때 SQL문을 사용하는 메서드 이름과 같게하면
       유지보수할 때 알아보기 쉽다. 
       알아보기 쉬울 뿐만 아니라
       스프링 프레임워크와 연동할 때 DAO객체를 자동생성하고 
       그 메서드를 자동생성할 때 사용할 수 있다.
  -->
  <select id="selectList" 
          resultMap="BodyInfoMap" 
          parameterType="map">
    
    SELECT u.uno,b.uno,bdate,weight,muscle,fat,bno FROM BINFO b
    INNER JOIN USER u ON u.uno=b.uno
    <!-- limit #{startRowNo}, #{pageSize} -->
    
  </select>
  
  <!-- <insert id="insert" parameterType="BodyInfo">
    insert into CMU(cmuno, cmut, cmu_cnt, cmu_type, cmu_lk, uno) 
    values (#{no}, #{title}, 0, #{type}, 0, 1);
  </insert>
  
  파라미터의 타입이 primitive type이나 wrapper 클래스, String 클래스인 경우
       값을 꺼낼 때 프로퍼티 이름을 마음대로 해도 된다.
 -->
  <select id="selectOne" parameterType="int" resultMap="BodyInfoMap">

    SELECT u.uno,bdate,weight,muscle,fat,bno FROM BINFO b
    INNER JOIN USER u ON u.uno=b.uno
    where u.uno=#{uno}
  </select>
  
   <update id="update" parameterType="BodyInfo">
    update BINFO set 
        mdate=#{bdate}, 
        weight=#{weight},
        muscle=#{muscle},
        muscle=#{muscle},
        fat=#{fat}
    where uno=#{no}
  </update>
  <!--
  <delete id="delete" parameterType="int">
    delete from POST where pono=#{value}
  </delete>  -->
</mapper>