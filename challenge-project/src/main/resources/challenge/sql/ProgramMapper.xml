<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="challenge.dao.ProgramDao">

  <resultMap type="Program" id="ProgramMap">
    <id column="pno" property="no"/>
    <result column="pstno" property="postNo"/>
    <result column="bas_addr" property="address"/>
    <result column="det_addr" property="addDetail"/>
    <result column="pname" property="name"/>
    <result column="sdt" property="startDate"/>
    <result column="edt" property="endDate"/>
    <result column="minqty" property="minQty"/>
    <result column="maxqty" property="maxQty"/>
    <result column="pprice" property="price"/>
    <result column="pdesc" property="description"/>
    <result column="ptype" property="proType"/>
    <result column="pgoal" property="proGoal"/>
    <result column="pgoal_n" property="proGoalNum"/>
    <result column="pth" property="proTh"/>
    <result column="ptover" property="proTurn"/>
    
    <result column="pday" property="proDay"/>
    <result column="ptime" property="proTime"/>
    
    <result column="pstate" property="proState"/>
    <result column="presult" property="proResult"/>

    <result column="cno" property="challengeNo"/>
    <result column="trnno" property="trainerNo"/>

    <collection property="medias" ofType="ProgramMedia">
        <id column="pno" property="no" />
        <id column="pmedno" property="pmno"/>
        <result column="ppath" property="path"/>
        <result column="pmtype" property="state"/>
    </collection>
    <collection property="user" ofType="User">
        <id column="uno" property="userNo" />
        <result column="uname" property="name"/>
        <result column="upath" property="userPath"/>
        
    </collection>
    
  </resultMap>

  <select id="selectListCard"
          resultMap="ProgramMap" parameterType="map">
    select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno,
           m.pmedno, m.ppath, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    <!-- limit #{startRowNo}, #{pageSize} -->
  </select>
  
    <select id="pagingListCard"
          resultMap="ProgramMap" parameterType="map">
    select Max(m.ppath) as ppath, p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno,
           m.pmedno, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
         Group By p.pno, p.pname
         order by p.sdt desc
         limit #{startRowNo}, #{pageSize} 
  </select>
  
      <select id="pagingListProgoal"
          resultMap="ProgramMap" parameterType="map">
    select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno, p.ptype, p.det_addr, p.pgoal,
           m.pmedno, m.ppath, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    where pgoal = #{programGoal}
    limit #{startRowNo}, #{pageSize} 
  </select>
  
        <select id="pagingListKeyword"
          resultMap="ProgramMap" parameterType="map">
         select Max(m.ppath) as ppath, p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno, p.ptype, p.det_addr, p.pgoal, m.pmedno, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    where pname like CONCAT('%', #{keyword}, '%')
    or ptype like CONCAT('%', #{keyword}, '%')
    or bas_addr like CONCAT('%', #{keyword}, '%')
    or det_addr like CONCAT('%', #{keyword}, '%')
    or pgoal like CONCAT('%', #{keyword}, '%')
    Group By p.pno, p.pname
    order by p.sdt desc
    limit #{startRowNo}, #{pageSize}
  </select>
  
  <select id="selectListChallenge"
          resultMap="ProgramMap" parameterType="map">
    select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno,
           m.pmedno, m.ppath, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    where p.cno = #{challengeNo}
  </select>
  
  
    <select id="selectListWithKeyword"
          resultMap="ProgramMap" parameterType="string">
    select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno, p.ptype, p.det_addr, p.pgoal,
           m.pmedno, m.ppath, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    where pname like CONCAT('%', #{keyword}, '%')
    or ptype like CONCAT('%', #{keyword}, '%')
    or bas_addr like CONCAT('%', #{keyword}, '%')
    or det_addr like CONCAT('%', #{keyword}, '%')
    or pgoal like CONCAT('%', #{keyword}, '%')
    <!-- limit #{startRowNo}, #{pageSize} -->
  </select>
  
   <select id="listCardWithProgoal"
          resultMap="ProgramMap" parameterType="string">
    select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno, p.ptype, p.det_addr, p.pgoal,
           m.pmedno, m.ppath, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    where pgoal = #{value}
    <!-- limit #{startRowNo}, #{pageSize} -->
  </select>
  
  
  <select id="selectPrice"
          resultMap="ProgramMap" parameterType="map">
	select Max(m.ppath),p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno, p.ptype, p.det_addr, p.pgoal,m.pmedno,m.pmtype  from PMED m
    right outer join PROG p on m.pno=p.pno
    left outer join TRN t on p.trnno=t.trnno
	where p.pprice BETWEEN #{minPrice} AND #{maxPrice}
	Group By p.pno,p.pprice
	order by p.pprice asc
	limit #{startRowNo}, #{pageSize}
  </select>
  <select id="pList"
          resultMap="ProgramMap" parameterType="map">
	
	select Max(m.ppath),p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno, p.ptype, p.det_addr, p.pgoal,m.pmedno,m.pmtype  from PMED m
    right outer join PROG p on m.pno=p.pno
    left outer join TRN t on p.trnno=t.trnno
    where p.pprice BETWEEN #{minPrice} AND #{maxPrice} 
    Group By p.pno,p.pprice
    order by p.pprice asc


   
  </select>

   <select id="countCardsWithProgramGoal" resultType="java.util.HashMap" parameterType="java.util.HashMap">
       select pgoal, count(*) as count
       from PROG
       where pgoal in
        <foreach collection="programGoals_list" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
       group by pgoal;
    </select>
  
  

  <!-- 운동 종목 search -->
  <select id="selectListWithProgramType" resultMap="ProgramMap"
  		resultType="java.util.HashMap" parameterType="java.util.HashMap">
  	select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.minqty, p.maxqty, p.sdt, p.trnno,
           m.pmedno, m.ppath, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    where p.ptype in
    <foreach collection="programTypeList" item="item" index="index" separator="," open="(" close=")">
            #{item}
    </foreach>
    Group By p.pno
  </select>
  
    <!-- 가격순 search -->
  <select id="selectListWithPrice" resultMap="ProgramMap">
  	select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.minqty, p.maxqty, p.sdt, p.trnno,
           m.pmedno, m.ppath, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    order by p.pprice asc
  </select>
  
    <!-- 최신순 search -->
  <select id="selectListWithStartDate" resultMap="ProgramMap">
  	select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.minqty, p.maxqty, p.sdt, p.trnno,
           m.pmedno, m.ppath, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    order by p.sdt asc
  </select>
  
  <select id="selectTrainerProgram"
          resultMap="ProgramMap" parameterType="map">
    select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.pType,
           m.pmedno, m.ppath
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    where t.trnno=#{value}
    order by pno desc
    <!-- limit #{startRowNo}, #{pageSize} -->
  </select>
  
  <select id="selectTrainerProgramTurn"
          resultMap="ProgramMap" parameterType="map">
  select p.pno, p.pname, p.pth, p.sdt, p.edt
  from PROG p
          inner join TRN t on p.trnno=t.trnno
  where t.trnno=#{value} and p.pname in (
		                   select pname
		                   from PROG
		                   GROUP BY pname 
		                   having count(*) > 1 )
  </select>
  

  <select id="selectList"
          resultMap="ProgramMap" parameterType="map">
    select *
    from PROG
    <!-- limit #{startRowNo}, #{pageSize} -->
  </select>
  
  <select id="mainList"
          resultMap="ProgramMap">
    select p.pname,p.ptype,pm.pmedno,Max(pm.ppath),p.pno,pm.pno,pm.ppath FROM PROG p 
    inner join PMED pm on p.pno = pm.pno 
    Group By p.pname,p.pno,pm.pno
    order by pm.pmedno desc limit 6
  </select>

  <insert id="insert" parameterType="Object"
        useGeneratedKeys="true" keyColumn="pno" keyProperty="no">
    insert into PROG(
        pstno, bas_addr, det_addr, 
        sdt, edt, 
        pname, 
        minqty, maxqty,
        pprice, pdesc, ptype, 
        pgoal, pgoal_N, 
        pth, ptover, 
        pday, ptime, 
        pstate, presult,
        cno, trnno)
    values(
        #{postNo},#{address},#{addDetail},
        #{startDate},#{endDate}, 
        #{name},
        #{minQty}, #{maxQty}, 
        #{price}, #{description}, #{proType}, 
        #{proGoal}, #{proGoalNum},
        #{proTh}, #{proTurn}, 
        #{proDay}, #{proTime}, 
        #{proState}, #{proResult},
        #{challengeNo}, #{trainerNo})
  </insert>



  <select id="selectOne" parameterType="string" resultMap="ProgramMap">
    select p.PNO,p.PNAME,p.PPRICE,u.uname
    from PROG p 
    inner join TRN t on p.TRNNO =  t.TRNNO
    inner join USER u on t.TRNNO = u.UNO
    
  </select>

  <select id="selectOneWithMedia" parameterType="int" resultMap="ProgramMap">
    select
        p.*,
        t.*,
        u.*,
        m.*
    from PMED m 
         right outer join PROG p on m.pno = p.pno
         left outer join TRN t on p.TRNNO = t.TRNNO
         right outer join USER u on t.TRNNO = u.UNO
    where p.pno=#{value}
  </select>
  
  <select id="selectRecent" resultMap="ProgramMap">
    select pno, trnno
    from PROG 
    order by pno desc limit 1 
  </select>

  <update id="update" parameterType="Program">
    update pms2_program set
      dscrt=#{description},
      max_qty=#{maxQty},
      sdt=#{startDate},
      edt=#{endDate}
    where name=#{name}
  </update>

  <delete id="delete" parameterType="string">
    delete from pms2_program
    where name=#{value}
  </delete>

  <update id="updateState" parameterType="map">
    update pms2_program set
      stat=#{state}
    where tano=#{no}
  </update>
  
  <!-- 검색 페이징 listPage -->
  <select id="selectListPage"
          resultMap="ProgramMap" parameterType="map">
    select p.pno, p.pname, p.pth, p.pprice, p.bas_addr, p.maxqty, p.sdt, p.trnno,
           m.pmedno, m.ppath, m.pmtype
    from PMED m
         right outer join PROG p on m.pno=p.pno
         left outer join TRN t on p.trnno=t.trnno
    limit #{startRowNo}, #{pageSize}
  </select>
  
</mapper>
