<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 이름은 SQL을 찾을 때 사용하는 그룹명이다.
     따라서 SQL 문을 사용하는 DAO 클래스 이름과 같게 하면
     유지보수할 때 알아보기 쉽다.
     단순히 알아보기 쉬울 뿐만 아니라 
     스프링 프레임워크와 연동할 때 DAO 객체를 자동 생성할 수 있다. 
-->
<mapper namespace="challenge.dao.CommuMediaDao">
  <resultMap type="CommuMedia" id="CommuMediaMap">
    <id column="cmedno" property="mediaNo"/>
    <result column="cmuno" property="commuNo"/>
    <result column="cpath" property="mediaPath"/>
  </resultMap>
  
  
  <!-- SQL 문 id를 설정할 때 SQL문을 사용하는 메서드 이름과 같게하면
       유지보수할 때 알아보기 쉽다. 
       알아보기 쉬울 뿐만 아니라
       스프링 프레임워크와 연동할 때 DAO객체를 자동생성하고 
       그 메서드를 자동생성할 때 사용할 수 있다.
  -->
  <select id="selectList" 
          resultMap="CommuMediaMap" 
          parameterType="map">
    select cmuno, cmedno, cpath
    from CMED 
    order by cmuno desc
    <!-- limit #{startRowNo}, #{pageSize} -->
    
  </select>
  
   <select id="ListNo" 
          resultMap="CommuMediaMap" 
          parameterType="int">
    select cmuno, cmedno, cpath
    from CMED 
    where cmuno=#{commuNo}
    <!-- limit #{startRowNo}, #{pageSize} -->
    
  </select>
  
  <insert id="insert" parameterType="CommuMedia"
  useGeneratedKeys="true" keyColumn="cmedno" keyProperty="mediaNo">
    insert into CMED(cpath, cmuno) 
    values(#{mediaPath}, #{commuNo});
  </insert>
  
  <!-- 파라미터의 타입이 primitive type이나 wrapper 클래스, String 클래스인 경우
       값을 꺼낼 때 프로퍼티 이름을 마음대로 해도 된다.
  -->
  <select id="selectOne" parameterType="int" resultMap="CommuMediaMap">
    select cmuno, cmedno, cpath
    from CMED
    where cmedno = #{value}
  </select>
  
<update id="update" parameterType="CommuMedia">
    update CMED set 
    cpath=#{mediaPath},
    cmuno=#{commuNo}
    where cmedno=#{mediaNo}
  </update>
  
   <delete id="delete" parameterType="int">
    delete from CMED where cmedno=#{value}
  </delete>
     
</mapper>